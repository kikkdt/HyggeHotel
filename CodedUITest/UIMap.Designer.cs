// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 16.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v21_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod_ThanhToan - Use 'RecordedMethod_ThanhToanParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_ThanhToan()
        {
            #region Variable Declarations
            DXButton uIItem101PhòngThườngSốButton = this.UIQuảnlýkháchsạnWindow.UIItem101PhòngThườngSốButton;
            DXButton uIThanhtoánButton = this.UIThôngtinphòng101Window.UIThanhtoánButton;
            WinEdit uIGiảmtrừEdit = this.UIThanhtoánWindow.UIGiảmtrừSpinner.UIGiảmtrừEdit;
            WinButton uIThanhtoánButton1 = this.UIThanhtoánWindow.UIThanhtoánWindow1.UIThanhtoánButton;
            WinButton uIYesButton = this.UIThôngbáoWindow.UIYesWindow.UIYesButton;
            WinText uIThanhtoánthànhcôngText = this.UIThanhtoánWindow.UIThanhtoánthànhcôngWindow.UIThanhtoánthànhcôngText;
            #endregion

            // Click '101
            //Phòng Thường
            //Số người: 2' button
            Mouse.Click(uIItem101PhòngThườngSốButton, new Point(1, 1));

            // Click 'Thanh toán' button
            Mouse.Click(uIThanhtoánButton, new Point(1, 1));

            // Click 'Giảm trừ:' text box
            Mouse.Click(uIGiảmtrừEdit, new Point(28, 8));

            // Type '{Back}40000' in 'Giảm trừ:' text box
            Keyboard.SendKeys(uIGiảmtrừEdit, this.RecordedMethod_ThanhToanParams.UIGiảmtrừEditSendKeys, ModifierKeys.None);

            // Click 'Thanh toán' button
            Mouse.Click(uIThanhtoánButton1, new Point(36, 13));

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(42, 15));

            // Click 'Thanh toán thành công.' label
            Mouse.Click(uIThanhtoánthànhcôngText, new Point(94, 17));
        }
        
        /// <summary>
        /// AssertMethod_ThanhToan - Use 'AssertMethod_ThanhToanExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_ThanhToan()
        {
            #region Variable Declarations
            WinText uIThanhtoánthànhcôngText = this.UIThanhtoánWindow.UIThanhtoánthànhcôngWindow.UIThanhtoánthànhcôngText;
            #endregion

            // Verify that the 'ControlType' property of 'Thanh toán thành công.' label equals 'Thanh toán thành công.'
            Assert.AreEqual(this.AssertMethod_ThanhToanExpectedValues.UIThanhtoánthànhcôngTextControlType, uIThanhtoánthànhcôngText.ControlType.ToString());
        }
        
        /// <summary>
        /// RecordedMethod_DatPhong_KhachHangTrong - Use 'RecordedMethod_DatPhong_KhachHangTrongParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_DatPhong_KhachHangTrong()
        {
            #region Variable Declarations
            DXTextEdit uITxtUsernameEdit = this.UIĐăngnhậpWindow2.UITxtUsernameEdit;
            DXTextEdit uITxtPasswordEdit = this.UIĐăngnhậpWindow2.UITxtPasswordEdit;
            DXButton uIĐăngnhậpButton = this.UIĐăngnhậpWindow2.UIĐăngnhậpButton;
            DXRibbonButtonItem uIĐặtphòngRibbonBaseButtonItem = this.UIQuảnlýkháchsạnWindow.UIRibbonControlRibbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup4RibbonPageGroup.UIĐặtphòngRibbonBaseButtonItem;
            DXButton uILưuButton = this.UIĐặtphòngWindow.UITabNavigationPage1ScrollableControl.UILưuButton;
            #endregion

            // Type 'admin' in 'txtUsername' text box
            //ValueAsString
            uITxtUsernameEdit.ValueAsString = this.RecordedMethod_DatPhong_KhachHangTrongParams.UITxtUsernameEditValueAsString;

            // Type '{Tab}' in 'txtUsername' text box
            Keyboard.SendKeys(uITxtUsernameEdit, this.RecordedMethod_DatPhong_KhachHangTrongParams.UITxtUsernameEditSendKeys, ModifierKeys.None);

            // Type '***' in 'txtPassword' text box
            //ValueAsString
            uITxtPasswordEdit.ValueAsString = this.RecordedMethod_DatPhong_KhachHangTrongParams.UITxtPasswordEditValueAsString;

            // Click 'Đăng nhập' button
            Mouse.Click(uIĐăngnhậpButton, new Point(1, 1));

            // Click 'Đặt phòng' RibbonBaseButtonItem
            Mouse.Click(uIĐặtphòngRibbonBaseButtonItem, new Point(47, 38));

            // Click 'Lưu' button
            Mouse.Click(uILưuButton, new Point(1, 1));
        }
        
        /// <summary>
        /// RecordedMethod_CheckInKhongHopLe - Use 'RecordedMethod_CheckInKhongHopLeParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_CheckInKhongHopLe()
        {
            #region Variable Declarations
            DXTextEdit uITxtUsernameEdit = this.UIĐăngnhậpWindow2.UITxtUsernameEdit;
            DXTextEdit uITxtPasswordEdit = this.UIĐăngnhậpWindow2.UITxtPasswordEdit;
            DXButton uIĐăngnhậpButton = this.UIĐăngnhậpWindow2.UIĐăngnhậpButton;
            DXRibbonButtonItem uIĐặtphòngRibbonBaseButtonItem = this.UIQuảnlýkháchsạnWindow.UIRibbonControlRibbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup4RibbonPageGroup.UIĐặtphòngRibbonBaseButtonItem;
            DXDateTimePicker uIDateFromDateTimeEdit = this.UIĐặtphòngWindow.UITabNavigationPage1ScrollableControl.UIDateFromDateTimeEdit;
            #endregion

            // Type 'admin' in 'txtUsername' text box
            //ValueAsString
            uITxtUsernameEdit.ValueAsString = this.RecordedMethod_CheckInKhongHopLeParams.UITxtUsernameEditValueAsString;

            // Type '{Tab}' in 'txtUsername' text box
            Keyboard.SendKeys(uITxtUsernameEdit, this.RecordedMethod_CheckInKhongHopLeParams.UITxtUsernameEditSendKeys, ModifierKeys.None);

            // Type '***' in 'txtPassword' text box
            //ValueAsString
            uITxtPasswordEdit.ValueAsString = this.RecordedMethod_CheckInKhongHopLeParams.UITxtPasswordEditValueAsString;

            // Click 'Đăng nhập' button
            Mouse.Click(uIĐăngnhậpButton, new Point(1, 1));

            // Click 'Đặt phòng' RibbonBaseButtonItem
            Mouse.Click(uIĐặtphòngRibbonBaseButtonItem, new Point(28, 28));

            // Type '2022-06-06 [SelectionStart]0[SelectionLength]10' in 'dateFrom' DateTimeEdit
            //ValueAsString
            uIDateFromDateTimeEdit.ValueAsString = this.RecordedMethod_CheckInKhongHopLeParams.UIDateFromDateTimeEditValueAsString;
        }
        
        /// <summary>
        /// RecordedMethod_CheckOutKhongHopLe - Use 'RecordedMethod_CheckOutKhongHopLeParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_CheckOutKhongHopLe()
        {
            #region Variable Declarations
            DXTextEdit uITxtUsernameEdit = this.UIĐăngnhậpWindow2.UITxtUsernameEdit;
            DXTextEdit uITxtPasswordEdit = this.UIĐăngnhậpWindow2.UITxtPasswordEdit;
            DXButton uIĐăngnhậpButton = this.UIĐăngnhậpWindow2.UIĐăngnhậpButton;
            DXRibbonButtonItem uIĐặtphòngRibbonBaseButtonItem = this.UIQuảnlýkháchsạnWindow.UIRibbonControlRibbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup4RibbonPageGroup.UIĐặtphòngRibbonBaseButtonItem;
            DXDateTimePicker uIDateToDateTimeEdit = this.UIĐặtphòngWindow.UITabNavigationPage1ScrollableControl.UIDateToDateTimeEdit;
            #endregion

            // Type 'admin' in 'txtUsername' text box
            //ValueAsString
            uITxtUsernameEdit.ValueAsString = this.RecordedMethod_CheckOutKhongHopLeParams.UITxtUsernameEditValueAsString;

            // Type '{Tab}' in 'txtUsername' text box
            Keyboard.SendKeys(uITxtUsernameEdit, this.RecordedMethod_CheckOutKhongHopLeParams.UITxtUsernameEditSendKeys, ModifierKeys.None);

            // Type '***' in 'txtPassword' text box
            //ValueAsString
            uITxtPasswordEdit.ValueAsString = this.RecordedMethod_CheckOutKhongHopLeParams.UITxtPasswordEditValueAsString;

            // Click 'Đăng nhập' button
            Mouse.Click(uIĐăngnhậpButton, new Point(1, 1));

            // Click 'Đặt phòng' RibbonBaseButtonItem
            Mouse.Click(uIĐặtphòngRibbonBaseButtonItem, new Point(40, 33));

            // Type '2022-06-10 [SelectionStart]0[SelectionLength]2' in 'dateTo' DateTimeEdit
            //ValueAsString
            uIDateToDateTimeEdit.ValueAsString = this.RecordedMethod_CheckOutKhongHopLeParams.UIDateToDateTimeEditValueAsString;
        }
        
        /// <summary>
        /// RecordedMethod_TamTinh - Use 'RecordedMethod_TamTinhParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_TamTinh()
        {
            #region Variable Declarations
            DXTextEdit uITxtUsernameEdit = this.UIĐăngnhậpWindow2.UITxtUsernameEdit;
            DXTextEdit uITxtPasswordEdit = this.UIĐăngnhậpWindow2.UITxtPasswordEdit;
            DXButton uIĐăngnhậpButton = this.UIĐăngnhậpWindow2.UIĐăngnhậpButton;
            DXRibbonButtonItem uIĐặtphòngRibbonBaseButtonItem = this.UIQuảnlýkháchsạnWindow.UIRibbonControlRibbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup4RibbonPageGroup.UIĐặtphòngRibbonBaseButtonItem;
            DXButton uIBtnThemPhongButton = this.UIĐặtphòngWindow.UITabNavigationPage1ScrollableControl.UIBtnThemPhongButton;
            DXButton uIItem101PhòngThườngSốButton = this.UIChọnthêmphòngWindow1.UIItem101PhòngThườngSốButton;
            DXButton uILưuButton = this.UIChọnthêmphòngWindow1.UILưuButton;
            #endregion

            // Type 'admin' in 'txtUsername' text box
            //ValueAsString
            uITxtUsernameEdit.ValueAsString = this.RecordedMethod_TamTinhParams.UITxtUsernameEditValueAsString;

            // Type '{Tab}' in 'txtUsername' text box
            Keyboard.SendKeys(uITxtUsernameEdit, this.RecordedMethod_TamTinhParams.UITxtUsernameEditSendKeys, ModifierKeys.None);

            // Type '***' in 'txtPassword' text box
            //ValueAsString
            uITxtPasswordEdit.ValueAsString = this.RecordedMethod_TamTinhParams.UITxtPasswordEditValueAsString;

            // Click 'Đăng nhập' button
            Mouse.Click(uIĐăngnhậpButton, new Point(1, 1));

            // Click 'Đặt phòng' RibbonBaseButtonItem
            Mouse.Click(uIĐặtphòngRibbonBaseButtonItem, new Point(30, 46));

            // Click 'btnThemPhong' button
            Mouse.Click(uIBtnThemPhongButton, new Point(1, 1));

            // Click '101
            //Phòng Thường
            //Số người: 2' button
            Mouse.Click(uIItem101PhòngThườngSốButton, new Point(1, 1));

            // Click 'Lưu' button
            Mouse.Click(uILưuButton, new Point(1, 1));
        }
        
        /// <summary>
        /// RecordedMethod_TraTruocKhongHopLe - Use 'RecordedMethod_TraTruocKhongHopLeParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_TraTruocKhongHopLe()
        {
            #region Variable Declarations
            DXTextEdit uITxtUsernameEdit = this.UIĐăngnhậpWindow2.UITxtUsernameEdit;
            DXTextEdit uITxtPasswordEdit = this.UIĐăngnhậpWindow2.UITxtPasswordEdit;
            DXButton uIĐăngnhậpButton = this.UIĐăngnhậpWindow2.UIĐăngnhậpButton;
            DXRibbonButtonItem uIĐặtphòngRibbonBaseButtonItem = this.UIQuảnlýkháchsạnWindow.UIRibbonControlRibbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup4RibbonPageGroup.UIĐặtphòngRibbonBaseButtonItem;
            DXButton uIBtnThemPhongButton = this.UIĐặtphòngWindow.UITabNavigationPage1ScrollableControl.UIBtnThemPhongButton;
            DXButton uIItem101PhòngThườngSốButton = this.UIChọnthêmphòngWindow1.UIItem101PhòngThườngSốButton;
            DXButton uILưuButton = this.UIChọnthêmphòngWindow1.UILưuButton;
            DXTextEdit uINumerTraTruocEdit = this.UIĐặtphòngWindow.UITabNavigationPage1ScrollableControl.UINumerTraTruocEdit;
            #endregion

            // Type 'admin' in 'txtUsername' text box
            //ValueAsString
            uITxtUsernameEdit.ValueAsString = this.RecordedMethod_TraTruocKhongHopLeParams.UITxtUsernameEditValueAsString;

            // Type '{Tab}' in 'txtUsername' text box
            Keyboard.SendKeys(uITxtUsernameEdit, this.RecordedMethod_TraTruocKhongHopLeParams.UITxtUsernameEditSendKeys, ModifierKeys.None);

            // Type '***' in 'txtPassword' text box
            //ValueAsString
            uITxtPasswordEdit.ValueAsString = this.RecordedMethod_TraTruocKhongHopLeParams.UITxtPasswordEditValueAsString;

            // Click 'Đăng nhập' button
            Mouse.Click(uIĐăngnhậpButton, new Point(1, 1));

            // Click 'Đặt phòng' RibbonBaseButtonItem
            Mouse.Click(uIĐặtphòngRibbonBaseButtonItem, new Point(17, 32));

            // Click 'btnThemPhong' button
            Mouse.Click(uIBtnThemPhongButton, new Point(1, 1));

            // Click '101
            //Phòng Thường
            //Số người: 2' button
            Mouse.Click(uIItem101PhòngThườngSốButton, new Point(1, 1));

            // Click 'Lưu' button
            Mouse.Click(uILưuButton, new Point(1, 1));

            // Type '-100 [SelectionStart]1' in 'numerTraTruoc' text box
            //ValueAsString
            uINumerTraTruocEdit.ValueAsString = this.RecordedMethod_TraTruocKhongHopLeParams.UINumerTraTruocEditValueAsString;
        }
        
        /// <summary>
        /// RecordedMethod_TamTinhCoDungDichVu - Use 'RecordedMethod_TamTinhCoDungDichVuParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_TamTinhCoDungDichVu()
        {
            #region Variable Declarations
            DXTextEdit uITxtUsernameEdit = this.UIĐăngnhậpWindow2.UITxtUsernameEdit;
            DXTextEdit uITxtPasswordEdit = this.UIĐăngnhậpWindow2.UITxtPasswordEdit;
            DXButton uIĐăngnhậpButton = this.UIĐăngnhậpWindow2.UIĐăngnhậpButton;
            DXRibbonButtonItem uIĐặtphòngRibbonBaseButtonItem = this.UIQuảnlýkháchsạnWindow.UIRibbonControlRibbon.UIRibbonPage1RibbonPage.UIRibbonPageGroup4RibbonPageGroup.UIĐặtphòngRibbonBaseButtonItem;
            DXButton uIBtnThemPhongButton = this.UIĐặtphòngWindow.UITabNavigationPage1ScrollableControl.UIBtnThemPhongButton;
            DXButton uIItem101PhòngThườngSốButton = this.UIChọnthêmphòngWindow1.UIItem101PhòngThườngSốButton;
            DXButton uILưuButton = this.UIChọnthêmphòngWindow1.UILưuButton;
            WinTabPage uISảnphẩmdịchvụTabPage = this.UIĐặtphòngWindow1.UITabPane1TabList.UISảnphẩmdịchvụTabPage;
            WinButton uIBánhmìngọt15000Button = this.UIĐặtphòngWindow1.UITabNavigationPage2ScrollableControl.UIPanelSanPhamWindow.UIBánhmìngọt15000Button;
            WinTabPage uIThôngtinTabPage = this.UIĐặtphòngWindow1.UITabPane1TabList.UIThôngtinTabPage;
            #endregion

            // Type 'admin' in 'txtUsername' text box
            //ValueAsString
            uITxtUsernameEdit.ValueAsString = this.RecordedMethod_TamTinhCoDungDichVuParams.UITxtUsernameEditValueAsString;

            // Type '{Tab}' in 'txtUsername' text box
            Keyboard.SendKeys(uITxtUsernameEdit, this.RecordedMethod_TamTinhCoDungDichVuParams.UITxtUsernameEditSendKeys, ModifierKeys.None);

            // Type '***' in 'txtPassword' text box
            //ValueAsString
            uITxtPasswordEdit.ValueAsString = this.RecordedMethod_TamTinhCoDungDichVuParams.UITxtPasswordEditValueAsString;

            // Click 'Đăng nhập' button
            Mouse.Click(uIĐăngnhậpButton, new Point(1, 1));

            // Click 'Đặt phòng' RibbonBaseButtonItem
            Mouse.Click(uIĐặtphòngRibbonBaseButtonItem, new Point(36, 40));

            // Click 'btnThemPhong' button
            Mouse.Click(uIBtnThemPhongButton, new Point(1, 1));

            // Click '101
            //Phòng Thường
            //Số người: 2' button
            Mouse.Click(uIItem101PhòngThườngSốButton, new Point(1, 1));

            // Click 'Lưu' button
            Mouse.Click(uILưuButton, new Point(1, 1));

            // Click 'Sản phẩm & dịch vụ' tab
            Mouse.Click(uISảnphẩmdịchvụTabPage, new Point(90, 15));

            // Click 'Bánh mì ngọt 15.000' button
            Mouse.Click(uIBánhmìngọt15000Button, new Point(71, 37));

            // Click 'Thông tin' tab
            Mouse.Click(uIThôngtinTabPage, new Point(28, 12));
        }
        
        /// <summary>
        /// AssertMethod_DatPhong_KhachHangTrong - Use 'AssertMethod_DatPhong_KhachHangTrongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_DatPhong_KhachHangTrong()
        {
            #region Variable Declarations
            WinText uIKháchhàngkhônghợplệText = this.UILỗiWindow.UIKháchhàngkhônghợplệWindow.UIKháchhàngkhônghợplệText;
            #endregion

            // Verify that the 'ControlType' property of 'Khách hàng không hợp lệ.' label equals 'Text'
            Assert.AreEqual(this.AssertMethod_DatPhong_KhachHangTrongExpectedValues.UIKháchhàngkhônghợplệTextControlType, uIKháchhàngkhônghợplệText.ControlType.ToString());
        }
        
        /// <summary>
        /// AssertMethod_CheckInKhongHopLe - Use 'AssertMethod_CheckInKhongHopLeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_CheckInKhongHopLe()
        {
            #region Variable Declarations
            WinText uIThờigiancheckinkhôngText = this.UILỗiWindow.UIKháchhàngkhônghợplệWindow.UIThờigiancheckinkhôngText;
            #endregion

            // Verify that the 'ControlType' property of 'Thời gian check-in không hợp lệ.' label equals 'Text'
            Assert.AreEqual(this.AssertMethod_CheckInKhongHopLeExpectedValues.UIThờigiancheckinkhôngTextControlType, uIThờigiancheckinkhôngText.ControlType.ToString());
        }
        
        /// <summary>
        /// AssertMethod_CheckOutKhongHopLe - Use 'AssertMethod_CheckOutKhongHopLeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_CheckOutKhongHopLe()
        {
            #region Variable Declarations
            WinText uIThờigiancheckoutkhônText = this.UILỗiWindow.UIKháchhàngkhônghợplệWindow.UIThờigiancheckoutkhônText;
            #endregion

            // Verify that the 'ControlType' property of 'Thời gian check-out không hợp lệ.' label equals 'Text'
            Assert.AreEqual(this.AssertMethod_CheckOutKhongHopLeExpectedValues.UIThờigiancheckoutkhônTextControlType, uIThờigiancheckoutkhônText.ControlType.ToString());
        }
        
        /// <summary>
        /// AssertMethod_TamTinh - Use 'AssertMethod_TamTinhExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_TamTinh()
        {
            #region Variable Declarations
            DXTestControl uILblTamTinhLabel = this.UIĐặtphòngWindow.UITabNavigationPage1ScrollableControl.UILblTamTinhLabel;
            #endregion

            // Verify that the 'ClassName' property of 'lblTamTinh' label equals 'LabelControl'
            Assert.AreEqual(this.AssertMethod_TamTinhExpectedValues.UILblTamTinhLabelClassName, uILblTamTinhLabel.ClassName);
        }
        
        /// <summary>
        /// AssertMethod_TamTinhCoDungDichVu - Use 'AssertMethod_TamTinhCoDungDichVuExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_TamTinhCoDungDichVu()
        {
            #region Variable Declarations
            DXTestControl uILblTamTinhLabel = this.UIĐặtphòngWindow.UITabNavigationPage1ScrollableControl.UILblTamTinhLabel;
            #endregion

            // Verify that the 'ClassName' property of 'lblTamTinh' label equals 'LabelControl'
            Assert.AreEqual(this.AssertMethod_TamTinhCoDungDichVuExpectedValues.UILblTamTinhLabelClassName, uILblTamTinhLabel.ClassName);
        }
        
        /// <summary>
        /// AssertMethod_TraTruocKhongHopLe - Use 'AssertMethod_TraTruocKhongHopLeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_TraTruocKhongHopLe()
        {
            #region Variable Declarations
            WinText uISốtiềnkhônghợplệText = this.UILỗiWindow.UIKháchhàngkhônghợplệWindow.UISốtiềnkhônghợplệText;
            #endregion

            // Verify that the 'ControlType' property of 'Số tiền không hợp lệ.' label equals 'Text'
            Assert.AreEqual(this.AssertMethod_TraTruocKhongHopLeExpectedValues.UISốtiềnkhônghợplệTextControlType, uISốtiềnkhônghợplệText.ControlType.ToString());
        }
        
        #region Properties
        public virtual RecordedMethod_ThanhToanParams RecordedMethod_ThanhToanParams
        {
            get
            {
                if ((this.mRecordedMethod_ThanhToanParams == null))
                {
                    this.mRecordedMethod_ThanhToanParams = new RecordedMethod_ThanhToanParams();
                }
                return this.mRecordedMethod_ThanhToanParams;
            }
        }
        
        public virtual AssertMethod_ThanhToanExpectedValues AssertMethod_ThanhToanExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_ThanhToanExpectedValues == null))
                {
                    this.mAssertMethod_ThanhToanExpectedValues = new AssertMethod_ThanhToanExpectedValues();
                }
                return this.mAssertMethod_ThanhToanExpectedValues;
            }
        }
        
        public virtual RecordedMethod_DatPhong_KhachHangTrongParams RecordedMethod_DatPhong_KhachHangTrongParams
        {
            get
            {
                if ((this.mRecordedMethod_DatPhong_KhachHangTrongParams == null))
                {
                    this.mRecordedMethod_DatPhong_KhachHangTrongParams = new RecordedMethod_DatPhong_KhachHangTrongParams();
                }
                return this.mRecordedMethod_DatPhong_KhachHangTrongParams;
            }
        }
        
        public virtual RecordedMethod_CheckInKhongHopLeParams RecordedMethod_CheckInKhongHopLeParams
        {
            get
            {
                if ((this.mRecordedMethod_CheckInKhongHopLeParams == null))
                {
                    this.mRecordedMethod_CheckInKhongHopLeParams = new RecordedMethod_CheckInKhongHopLeParams();
                }
                return this.mRecordedMethod_CheckInKhongHopLeParams;
            }
        }
        
        public virtual RecordedMethod_CheckOutKhongHopLeParams RecordedMethod_CheckOutKhongHopLeParams
        {
            get
            {
                if ((this.mRecordedMethod_CheckOutKhongHopLeParams == null))
                {
                    this.mRecordedMethod_CheckOutKhongHopLeParams = new RecordedMethod_CheckOutKhongHopLeParams();
                }
                return this.mRecordedMethod_CheckOutKhongHopLeParams;
            }
        }
        
        public virtual RecordedMethod_TamTinhParams RecordedMethod_TamTinhParams
        {
            get
            {
                if ((this.mRecordedMethod_TamTinhParams == null))
                {
                    this.mRecordedMethod_TamTinhParams = new RecordedMethod_TamTinhParams();
                }
                return this.mRecordedMethod_TamTinhParams;
            }
        }
        
        public virtual RecordedMethod_TraTruocKhongHopLeParams RecordedMethod_TraTruocKhongHopLeParams
        {
            get
            {
                if ((this.mRecordedMethod_TraTruocKhongHopLeParams == null))
                {
                    this.mRecordedMethod_TraTruocKhongHopLeParams = new RecordedMethod_TraTruocKhongHopLeParams();
                }
                return this.mRecordedMethod_TraTruocKhongHopLeParams;
            }
        }
        
        public virtual RecordedMethod_TamTinhCoDungDichVuParams RecordedMethod_TamTinhCoDungDichVuParams
        {
            get
            {
                if ((this.mRecordedMethod_TamTinhCoDungDichVuParams == null))
                {
                    this.mRecordedMethod_TamTinhCoDungDichVuParams = new RecordedMethod_TamTinhCoDungDichVuParams();
                }
                return this.mRecordedMethod_TamTinhCoDungDichVuParams;
            }
        }
        
        public virtual AssertMethod_DatPhong_KhachHangTrongExpectedValues AssertMethod_DatPhong_KhachHangTrongExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_DatPhong_KhachHangTrongExpectedValues == null))
                {
                    this.mAssertMethod_DatPhong_KhachHangTrongExpectedValues = new AssertMethod_DatPhong_KhachHangTrongExpectedValues();
                }
                return this.mAssertMethod_DatPhong_KhachHangTrongExpectedValues;
            }
        }
        
        public virtual AssertMethod_CheckInKhongHopLeExpectedValues AssertMethod_CheckInKhongHopLeExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_CheckInKhongHopLeExpectedValues == null))
                {
                    this.mAssertMethod_CheckInKhongHopLeExpectedValues = new AssertMethod_CheckInKhongHopLeExpectedValues();
                }
                return this.mAssertMethod_CheckInKhongHopLeExpectedValues;
            }
        }
        
        public virtual AssertMethod_CheckOutKhongHopLeExpectedValues AssertMethod_CheckOutKhongHopLeExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_CheckOutKhongHopLeExpectedValues == null))
                {
                    this.mAssertMethod_CheckOutKhongHopLeExpectedValues = new AssertMethod_CheckOutKhongHopLeExpectedValues();
                }
                return this.mAssertMethod_CheckOutKhongHopLeExpectedValues;
            }
        }
        
        public virtual AssertMethod_TamTinhExpectedValues AssertMethod_TamTinhExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_TamTinhExpectedValues == null))
                {
                    this.mAssertMethod_TamTinhExpectedValues = new AssertMethod_TamTinhExpectedValues();
                }
                return this.mAssertMethod_TamTinhExpectedValues;
            }
        }
        
        public virtual AssertMethod_TamTinhCoDungDichVuExpectedValues AssertMethod_TamTinhCoDungDichVuExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_TamTinhCoDungDichVuExpectedValues == null))
                {
                    this.mAssertMethod_TamTinhCoDungDichVuExpectedValues = new AssertMethod_TamTinhCoDungDichVuExpectedValues();
                }
                return this.mAssertMethod_TamTinhCoDungDichVuExpectedValues;
            }
        }
        
        public virtual AssertMethod_TraTruocKhongHopLeExpectedValues AssertMethod_TraTruocKhongHopLeExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_TraTruocKhongHopLeExpectedValues == null))
                {
                    this.mAssertMethod_TraTruocKhongHopLeExpectedValues = new AssertMethod_TraTruocKhongHopLeExpectedValues();
                }
                return this.mAssertMethod_TraTruocKhongHopLeExpectedValues;
            }
        }
        
        public UIQuảnlýkháchsạnWindow UIQuảnlýkháchsạnWindow
        {
            get
            {
                if ((this.mUIQuảnlýkháchsạnWindow == null))
                {
                    this.mUIQuảnlýkháchsạnWindow = new UIQuảnlýkháchsạnWindow();
                }
                return this.mUIQuảnlýkháchsạnWindow;
            }
        }
        
        public UIThôngtinphòng101Window UIThôngtinphòng101Window
        {
            get
            {
                if ((this.mUIThôngtinphòng101Window == null))
                {
                    this.mUIThôngtinphòng101Window = new UIThôngtinphòng101Window();
                }
                return this.mUIThôngtinphòng101Window;
            }
        }
        
        public UIThanhtoánWindow UIThanhtoánWindow
        {
            get
            {
                if ((this.mUIThanhtoánWindow == null))
                {
                    this.mUIThanhtoánWindow = new UIThanhtoánWindow();
                }
                return this.mUIThanhtoánWindow;
            }
        }
        
        public UIThôngbáoWindow UIThôngbáoWindow
        {
            get
            {
                if ((this.mUIThôngbáoWindow == null))
                {
                    this.mUIThôngbáoWindow = new UIThôngbáoWindow();
                }
                return this.mUIThôngbáoWindow;
            }
        }
        
        public UIĐăngnhậpWindow UIĐăngnhậpWindow
        {
            get
            {
                if ((this.mUIĐăngnhậpWindow == null))
                {
                    this.mUIĐăngnhậpWindow = new UIĐăngnhậpWindow();
                }
                return this.mUIĐăngnhậpWindow;
            }
        }
        
        public UIPHÒNG206Window UIPHÒNG206Window
        {
            get
            {
                if ((this.mUIPHÒNG206Window == null))
                {
                    this.mUIPHÒNG206Window = new UIPHÒNG206Window();
                }
                return this.mUIPHÒNG206Window;
            }
        }
        
        public UINhậnphòngWindow UINhậnphòngWindow
        {
            get
            {
                if ((this.mUINhậnphòngWindow == null))
                {
                    this.mUINhậnphòngWindow = new UINhậnphòngWindow();
                }
                return this.mUINhậnphòngWindow;
            }
        }
        
        public UIĐăngnhậpWindow12 UIĐăngnhậpWindow1
        {
            get
            {
                if ((this.mUIĐăngnhậpWindow1 == null))
                {
                    this.mUIĐăngnhậpWindow1 = new UIĐăngnhậpWindow12();
                }
                return this.mUIĐăngnhậpWindow1;
            }
        }
        
        public UINhậnphòngWindow1 UINhậnphòngWindow1
        {
            get
            {
                if ((this.mUINhậnphòngWindow1 == null))
                {
                    this.mUINhậnphòngWindow1 = new UINhậnphòngWindow1();
                }
                return this.mUINhậnphòngWindow1;
            }
        }
        
        public UIĐặtphòngWindow UIĐặtphòngWindow
        {
            get
            {
                if ((this.mUIĐặtphòngWindow == null))
                {
                    this.mUIĐặtphòngWindow = new UIĐặtphòngWindow();
                }
                return this.mUIĐặtphòngWindow;
            }
        }
        
        public UILỗiWindow UILỗiWindow
        {
            get
            {
                if ((this.mUILỗiWindow == null))
                {
                    this.mUILỗiWindow = new UILỗiWindow();
                }
                return this.mUILỗiWindow;
            }
        }
        
        public UIChọnthêmphòngWindow UIChọnthêmphòngWindow
        {
            get
            {
                if ((this.mUIChọnthêmphòngWindow == null))
                {
                    this.mUIChọnthêmphòngWindow = new UIChọnthêmphòngWindow();
                }
                return this.mUIChọnthêmphòngWindow;
            }
        }
        
        public UIĐặtphòngWindow1 UIĐặtphòngWindow1
        {
            get
            {
                if ((this.mUIĐặtphòngWindow1 == null))
                {
                    this.mUIĐặtphòngWindow1 = new UIĐặtphòngWindow1();
                }
                return this.mUIĐặtphòngWindow1;
            }
        }
        
        public UIĐăngnhậpWindow2 UIĐăngnhậpWindow2
        {
            get
            {
                if ((this.mUIĐăngnhậpWindow2 == null))
                {
                    this.mUIĐăngnhậpWindow2 = new UIĐăngnhậpWindow2();
                }
                return this.mUIĐăngnhậpWindow2;
            }
        }
        
        public UIChọnthêmphòngWindow1 UIChọnthêmphòngWindow1
        {
            get
            {
                if ((this.mUIChọnthêmphòngWindow1 == null))
                {
                    this.mUIChọnthêmphòngWindow1 = new UIChọnthêmphòngWindow1();
                }
                return this.mUIChọnthêmphòngWindow1;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod_ThanhToanParams mRecordedMethod_ThanhToanParams;
        
        private AssertMethod_ThanhToanExpectedValues mAssertMethod_ThanhToanExpectedValues;
        
        private RecordedMethod_DatPhong_KhachHangTrongParams mRecordedMethod_DatPhong_KhachHangTrongParams;
        
        private RecordedMethod_CheckInKhongHopLeParams mRecordedMethod_CheckInKhongHopLeParams;
        
        private RecordedMethod_CheckOutKhongHopLeParams mRecordedMethod_CheckOutKhongHopLeParams;
        
        private RecordedMethod_TamTinhParams mRecordedMethod_TamTinhParams;
        
        private RecordedMethod_TraTruocKhongHopLeParams mRecordedMethod_TraTruocKhongHopLeParams;
        
        private RecordedMethod_TamTinhCoDungDichVuParams mRecordedMethod_TamTinhCoDungDichVuParams;
        
        private AssertMethod_DatPhong_KhachHangTrongExpectedValues mAssertMethod_DatPhong_KhachHangTrongExpectedValues;
        
        private AssertMethod_CheckInKhongHopLeExpectedValues mAssertMethod_CheckInKhongHopLeExpectedValues;
        
        private AssertMethod_CheckOutKhongHopLeExpectedValues mAssertMethod_CheckOutKhongHopLeExpectedValues;
        
        private AssertMethod_TamTinhExpectedValues mAssertMethod_TamTinhExpectedValues;
        
        private AssertMethod_TamTinhCoDungDichVuExpectedValues mAssertMethod_TamTinhCoDungDichVuExpectedValues;
        
        private AssertMethod_TraTruocKhongHopLeExpectedValues mAssertMethod_TraTruocKhongHopLeExpectedValues;
        
        private UIQuảnlýkháchsạnWindow mUIQuảnlýkháchsạnWindow;
        
        private UIThôngtinphòng101Window mUIThôngtinphòng101Window;
        
        private UIThanhtoánWindow mUIThanhtoánWindow;
        
        private UIThôngbáoWindow mUIThôngbáoWindow;
        
        private UIĐăngnhậpWindow mUIĐăngnhậpWindow;
        
        private UIPHÒNG206Window mUIPHÒNG206Window;
        
        private UINhậnphòngWindow mUINhậnphòngWindow;
        
        private UIĐăngnhậpWindow12 mUIĐăngnhậpWindow1;
        
        private UINhậnphòngWindow1 mUINhậnphòngWindow1;
        
        private UIĐặtphòngWindow mUIĐặtphòngWindow;
        
        private UILỗiWindow mUILỗiWindow;
        
        private UIChọnthêmphòngWindow mUIChọnthêmphòngWindow;
        
        private UIĐặtphòngWindow1 mUIĐặtphòngWindow1;
        
        private UIĐăngnhậpWindow2 mUIĐăngnhậpWindow2;
        
        private UIChọnthêmphòngWindow1 mUIChọnthêmphòngWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_ThanhToan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class RecordedMethod_ThanhToanParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Back}40000' in 'Giảm trừ:' text box
        /// </summary>
        public string UIGiảmtrừEditSendKeys = "{Back}40000";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_ThanhToan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class AssertMethod_ThanhToanExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Thanh toán thành công.' label equals 'Thanh toán thành công.'
        /// </summary>
        public string UIThanhtoánthànhcôngTextControlType = "Thanh toán thành công.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_DatPhong_KhachHangTrong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class RecordedMethod_DatPhong_KhachHangTrongParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'admin' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditValueAsString = "admin";
        
        /// <summary>
        /// Type '{Tab}' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '***' in 'txtPassword' text box
        /// </summary>
        public string UITxtPasswordEditValueAsString = "123";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_CheckInKhongHopLe'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class RecordedMethod_CheckInKhongHopLeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'admin' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditValueAsString = "admin";
        
        /// <summary>
        /// Type '{Tab}' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '***' in 'txtPassword' text box
        /// </summary>
        public string UITxtPasswordEditValueAsString = "123";
        
        /// <summary>
        /// Type '2022-06-06 [SelectionStart]0[SelectionLength]10' in 'dateFrom' DateTimeEdit
        /// </summary>
        public string UIDateFromDateTimeEditValueAsString = "2022-06-06 [SelectionStart]0[SelectionLength]10";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_CheckOutKhongHopLe'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class RecordedMethod_CheckOutKhongHopLeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'admin' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditValueAsString = "admin";
        
        /// <summary>
        /// Type '{Tab}' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '***' in 'txtPassword' text box
        /// </summary>
        public string UITxtPasswordEditValueAsString = "123";
        
        /// <summary>
        /// Type '2022-06-10 [SelectionStart]0[SelectionLength]2' in 'dateTo' DateTimeEdit
        /// </summary>
        public string UIDateToDateTimeEditValueAsString = "2022-06-10 [SelectionStart]0[SelectionLength]2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_TamTinh'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class RecordedMethod_TamTinhParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'admin' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditValueAsString = "admin";
        
        /// <summary>
        /// Type '{Tab}' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '***' in 'txtPassword' text box
        /// </summary>
        public string UITxtPasswordEditValueAsString = "123";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_TraTruocKhongHopLe'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class RecordedMethod_TraTruocKhongHopLeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'admin' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditValueAsString = "admin";
        
        /// <summary>
        /// Type '{Tab}' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '***' in 'txtPassword' text box
        /// </summary>
        public string UITxtPasswordEditValueAsString = "123";
        
        /// <summary>
        /// Type '-100 [SelectionStart]1' in 'numerTraTruoc' text box
        /// </summary>
        public string UINumerTraTruocEditValueAsString = "-100 [SelectionStart]1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_TamTinhCoDungDichVu'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class RecordedMethod_TamTinhCoDungDichVuParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'admin' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditValueAsString = "admin";
        
        /// <summary>
        /// Type '{Tab}' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '***' in 'txtPassword' text box
        /// </summary>
        public string UITxtPasswordEditValueAsString = "123";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_DatPhong_KhachHangTrong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class AssertMethod_DatPhong_KhachHangTrongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Khách hàng không hợp lệ.' label equals 'Text'
        /// </summary>
        public string UIKháchhàngkhônghợplệTextControlType = "Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_CheckInKhongHopLe'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class AssertMethod_CheckInKhongHopLeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Thời gian check-in không hợp lệ.' label equals 'Text'
        /// </summary>
        public string UIThờigiancheckinkhôngTextControlType = "Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_CheckOutKhongHopLe'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class AssertMethod_CheckOutKhongHopLeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Thời gian check-out không hợp lệ.' label equals 'Text'
        /// </summary>
        public string UIThờigiancheckoutkhônTextControlType = "Text";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_TamTinh'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class AssertMethod_TamTinhExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ClassName' property of 'lblTamTinh' label equals 'LabelControl'
        /// </summary>
        public string UILblTamTinhLabelClassName = "LabelControl";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_TamTinhCoDungDichVu'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class AssertMethod_TamTinhCoDungDichVuExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ClassName' property of 'lblTamTinh' label equals 'LabelControl'
        /// </summary>
        public string UILblTamTinhLabelClassName = "LabelControl";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_TraTruocKhongHopLe'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class AssertMethod_TraTruocKhongHopLeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Số tiền không hợp lệ.' label equals 'Text'
        /// </summary>
        public string UISốtiềnkhônghợplệTextControlType = "Text";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIQuảnlýkháchsạnWindow : DXWindow
    {
        
        public UIQuảnlýkháchsạnWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Quản lý khách sạn";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Quản lý khách sạn");
            #endregion
        }
        
        #region Properties
        public DXButton UIItem101PhòngThườngSốButton
        {
            get
            {
                if ((this.mUIItem101PhòngThườngSốButton == null))
                {
                    this.mUIItem101PhòngThườngSốButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIItem101PhòngThườngSốButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPhong[0]";
                    this.mUIItem101PhòngThườngSốButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIItem101PhòngThườngSốButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "9";
                    this.mUIItem101PhòngThườngSốButton.WindowTitles.Add("Quản lý khách sạn");
                    #endregion
                }
                return this.mUIItem101PhòngThườngSốButton;
            }
        }
        
        public DXButton UIItem206PhòngđôiSốngưButton
        {
            get
            {
                if ((this.mUIItem206PhòngđôiSốngưButton == null))
                {
                    this.mUIItem206PhòngđôiSốngưButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIItem206PhòngđôiSốngưButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPhong[8]";
                    this.mUIItem206PhòngđôiSốngưButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIItem206PhòngđôiSốngưButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "9";
                    this.mUIItem206PhòngđôiSốngưButton.WindowTitles.Add("Quản lý khách sạn");
                    #endregion
                }
                return this.mUIItem206PhòngđôiSốngưButton;
            }
        }
        
        public UIRibbonControlRibbon UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIItem101PhòngThườngSốButton;
        
        private DXButton mUIItem206PhòngđôiSốngưButton;
        
        private UIRibbonControlRibbon mUIRibbonControlRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIRibbonControlRibbon : DXRibbon
    {
        
        public UIRibbonControlRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Quản lý khách sạn");
            #endregion
        }
        
        #region Properties
        public UIRibbonPage1RibbonPage UIRibbonPage1RibbonPage
        {
            get
            {
                if ((this.mUIRibbonPage1RibbonPage == null))
                {
                    this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage(this);
                }
                return this.mUIRibbonPage1RibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPage1RibbonPage mUIRibbonPage1RibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIRibbonPage1RibbonPage : DXRibbonPage
    {
        
        public UIRibbonPage1RibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Quản lý khách sạn");
            #endregion
        }
        
        #region Properties
        public UIRibbonPageGroup4RibbonPageGroup UIRibbonPageGroup4RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup4RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup4RibbonPageGroup = new UIRibbonPageGroup4RibbonPageGroup(this);
                }
                return this.mUIRibbonPageGroup4RibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPageGroup4RibbonPageGroup mUIRibbonPageGroup4RibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIRibbonPageGroup4RibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup4RibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Quản lý khách sạn");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIĐặtphòngRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIĐặtphòngRibbonBaseButtonItem == null))
                {
                    this.mUIĐặtphòngRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIĐặtphòngRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "barBtnDatPhong";
                    this.mUIĐặtphòngRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIĐặtphòngRibbonBaseButtonItem.WindowTitles.Add("Quản lý khách sạn");
                    #endregion
                }
                return this.mUIĐặtphòngRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIĐặtphòngRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIThôngtinphòng101Window : WinWindow
    {
        
        public UIThôngtinphòng101Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Thông tin phòng - 101";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Thông tin phòng - 101");
            #endregion
        }
        
        #region Properties
        public DXButton UIThanhtoánButton
        {
            get
            {
                if ((this.mUIThanhtoánButton == null))
                {
                    this.mUIThanhtoánButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIThanhtoánButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnThanhToan";
                    this.mUIThanhtoánButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIThanhtoánButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    this.mUIThanhtoánButton.WindowTitles.Add("Thông tin phòng - 101");
                    #endregion
                }
                return this.mUIThanhtoánButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIThanhtoánButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIThanhtoánWindow : WinWindow
    {
        
        public UIThanhtoánWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Thanh toán";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Thanh toán");
            #endregion
        }
        
        #region Properties
        public UIGiảmtrừSpinner UIGiảmtrừSpinner
        {
            get
            {
                if ((this.mUIGiảmtrừSpinner == null))
                {
                    this.mUIGiảmtrừSpinner = new UIGiảmtrừSpinner(this);
                }
                return this.mUIGiảmtrừSpinner;
            }
        }
        
        public UIThanhtoánWindow1 UIThanhtoánWindow1
        {
            get
            {
                if ((this.mUIThanhtoánWindow1 == null))
                {
                    this.mUIThanhtoánWindow1 = new UIThanhtoánWindow1(this);
                }
                return this.mUIThanhtoánWindow1;
            }
        }
        
        public UIThanhtoánthànhcôngWindow UIThanhtoánthànhcôngWindow
        {
            get
            {
                if ((this.mUIThanhtoánthànhcôngWindow == null))
                {
                    this.mUIThanhtoánthànhcôngWindow = new UIThanhtoánthànhcôngWindow(this);
                }
                return this.mUIThanhtoánthànhcôngWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIGiảmtrừSpinner mUIGiảmtrừSpinner;
        
        private UIThanhtoánWindow1 mUIThanhtoánWindow1;
        
        private UIThanhtoánthànhcôngWindow mUIThanhtoánthànhcôngWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIGiảmtrừSpinner : WinSpinner
    {
        
        public UIGiảmtrừSpinner(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinSpinner.PropertyNames.Name] = "Giảm trừ:";
            this.WindowTitles.Add("Thanh toán");
            #endregion
        }
        
        #region Properties
        public WinEdit UIGiảmtrừEdit
        {
            get
            {
                if ((this.mUIGiảmtrừEdit == null))
                {
                    this.mUIGiảmtrừEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIGiảmtrừEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Giảm trừ:";
                    this.mUIGiảmtrừEdit.WindowTitles.Add("Thanh toán");
                    #endregion
                }
                return this.mUIGiảmtrừEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIGiảmtrừEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIThanhtoánWindow1 : WinWindow
    {
        
        public UIThanhtoánWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnThanhToan";
            this.WindowTitles.Add("Thanh toán");
            #endregion
        }
        
        #region Properties
        public WinButton UIThanhtoánButton
        {
            get
            {
                if ((this.mUIThanhtoánButton == null))
                {
                    this.mUIThanhtoánButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIThanhtoánButton.SearchProperties[WinButton.PropertyNames.Name] = "Thanh toán";
                    this.mUIThanhtoánButton.WindowTitles.Add("Thanh toán");
                    #endregion
                }
                return this.mUIThanhtoánButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIThanhtoánButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIThanhtoánthànhcôngWindow : WinWindow
    {
        
        public UIThanhtoánthànhcôngWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lbResult";
            this.WindowTitles.Add("Thanh toán");
            #endregion
        }
        
        #region Properties
        public WinText UIThanhtoánthànhcôngText
        {
            get
            {
                if ((this.mUIThanhtoánthànhcôngText == null))
                {
                    this.mUIThanhtoánthànhcôngText = new WinText(this);
                    #region Search Criteria
                    this.mUIThanhtoánthànhcôngText.SearchProperties[WinText.PropertyNames.Name] = "Thanh toán thành công.";
                    this.mUIThanhtoánthànhcôngText.WindowTitles.Add("Thanh toán");
                    #endregion
                }
                return this.mUIThanhtoánthànhcôngText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIThanhtoánthànhcôngText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIThôngbáoWindow : WinWindow
    {
        
        public UIThôngbáoWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Thông báo";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Thông báo");
            #endregion
        }
        
        #region Properties
        public UIYesWindow UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIYesWindow : WinWindow
    {
        
        public UIYesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Thông báo");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Thông báo");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIĐăngnhậpWindow : WinWindow
    {
        
        public UIĐăngnhậpWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Đăng nhập";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Đăng nhập");
            #endregion
        }
        
        #region Properties
        public UITxtUsernameWindow UITxtUsernameWindow
        {
            get
            {
                if ((this.mUITxtUsernameWindow == null))
                {
                    this.mUITxtUsernameWindow = new UITxtUsernameWindow(this);
                }
                return this.mUITxtUsernameWindow;
            }
        }
        
        public UITxtPasswordWindow UITxtPasswordWindow
        {
            get
            {
                if ((this.mUITxtPasswordWindow == null))
                {
                    this.mUITxtPasswordWindow = new UITxtPasswordWindow(this);
                }
                return this.mUITxtPasswordWindow;
            }
        }
        
        public UIĐăngnhậpWindow1 UIĐăngnhậpWindow1
        {
            get
            {
                if ((this.mUIĐăngnhậpWindow1 == null))
                {
                    this.mUIĐăngnhậpWindow1 = new UIĐăngnhậpWindow1(this);
                }
                return this.mUIĐăngnhậpWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UITxtUsernameWindow mUITxtUsernameWindow;
        
        private UITxtPasswordWindow mUITxtPasswordWindow;
        
        private UIĐăngnhậpWindow1 mUIĐăngnhậpWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UITxtUsernameWindow : WinWindow
    {
        
        public UITxtUsernameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtUsername";
            this.WindowTitles.Add("Đăng nhập");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtUsernameEdit
        {
            get
            {
                if ((this.mUITxtUsernameEdit == null))
                {
                    this.mUITxtUsernameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtUsernameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Tên đăng nhập:";
                    this.mUITxtUsernameEdit.WindowTitles.Add("Đăng nhập");
                    #endregion
                }
                return this.mUITxtUsernameEdit;
            }
        }
        
        public WinEdit UITxtUsernameEdit1
        {
            get
            {
                if ((this.mUITxtUsernameEdit1 == null))
                {
                    this.mUITxtUsernameEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtUsernameEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Tên đăng nhập:";
                    this.mUITxtUsernameEdit1.WindowTitles.Add("Đăng nhập");
                    #endregion
                }
                return this.mUITxtUsernameEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtUsernameEdit;
        
        private WinEdit mUITxtUsernameEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UITxtPasswordWindow : WinWindow
    {
        
        public UITxtPasswordWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPassword";
            this.WindowTitles.Add("Đăng nhập");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtPasswordEdit
        {
            get
            {
                if ((this.mUITxtPasswordEdit == null))
                {
                    this.mUITxtPasswordEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtPasswordEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Mật khẩu:";
                    this.mUITxtPasswordEdit.WindowTitles.Add("Đăng nhập");
                    #endregion
                }
                return this.mUITxtPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIĐăngnhậpWindow1 : WinWindow
    {
        
        public UIĐăngnhậpWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnDangNhap";
            this.WindowTitles.Add("Đăng nhập");
            #endregion
        }
        
        #region Properties
        public WinButton UIĐăngnhậpButton
        {
            get
            {
                if ((this.mUIĐăngnhậpButton == null))
                {
                    this.mUIĐăngnhậpButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIĐăngnhậpButton.SearchProperties[WinButton.PropertyNames.Name] = "Đăng nhập";
                    this.mUIĐăngnhậpButton.WindowTitles.Add("Đăng nhập");
                    #endregion
                }
                return this.mUIĐăngnhậpButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIĐăngnhậpButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIPHÒNG206Window : WinWindow
    {
        
        public UIPHÒNG206Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "PHÒNG: 206";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("PHÒNG: 206");
            #endregion
        }
        
        #region Properties
        public DXButton UINhậnphòngButton
        {
            get
            {
                if ((this.mUINhậnphòngButton == null))
                {
                    this.mUINhậnphòngButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINhậnphòngButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNhanPhong";
                    this.mUINhậnphòngButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUINhậnphòngButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    this.mUINhậnphòngButton.WindowTitles.Add("PHÒNG: 206");
                    #endregion
                }
                return this.mUINhậnphòngButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUINhậnphòngButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UINhậnphòngWindow : DXWindow
    {
        
        public UINhậnphòngWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Nhận phòng";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Nhận phòng");
            #endregion
        }
        
        #region Properties
        public UITabNavigationPage1ScrollableControl UITabNavigationPage1ScrollableControl
        {
            get
            {
                if ((this.mUITabNavigationPage1ScrollableControl == null))
                {
                    this.mUITabNavigationPage1ScrollableControl = new UITabNavigationPage1ScrollableControl(this);
                }
                return this.mUITabNavigationPage1ScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UITabNavigationPage1ScrollableControl mUITabNavigationPage1ScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UITabNavigationPage1ScrollableControl : DXScrollableControl
    {
        
        public UITabNavigationPage1ScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabNavigationPage1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabNavigationPage";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Nhận phòng");
            #endregion
        }
        
        #region Properties
        public DXButton UILưuButton
        {
            get
            {
                if ((this.mUILưuButton == null))
                {
                    this.mUILưuButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILưuButton.SearchProperties[DXTestControl.PropertyNames.Name] = "simpleButton3";
                    this.mUILưuButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILưuButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
                    this.mUILưuButton.WindowTitles.Add("Nhận phòng");
                    #endregion
                }
                return this.mUILưuButton;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILưuButton;
        
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Nhận phòng");
            #endregion
        }
        
        #region Properties
        public WinClient UITableLayoutPanel4Client
        {
            get
            {
                if ((this.mUITableLayoutPanel4Client == null))
                {
                    this.mUITableLayoutPanel4Client = new WinClient(this);
                    #region Search Criteria
                    this.mUITableLayoutPanel4Client.WindowTitles.Add("Nhận phòng");
                    #endregion
                }
                return this.mUITableLayoutPanel4Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUITableLayoutPanel4Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIĐăngnhậpWindow12 : WinWindow
    {
        
        public UIĐăngnhậpWindow12()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Đăng nhập";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.FilterProperties[WinWindow.PropertyNames.OrderOfInvocation] = "2";
            this.WindowTitles.Add("Đăng nhập");
            #endregion
        }
        
        #region Properties
        public UITxtUsernameWindow1 UITxtUsernameWindow
        {
            get
            {
                if ((this.mUITxtUsernameWindow == null))
                {
                    this.mUITxtUsernameWindow = new UITxtUsernameWindow1(this);
                }
                return this.mUITxtUsernameWindow;
            }
        }
        
        public UITxtPasswordWindow1 UITxtPasswordWindow
        {
            get
            {
                if ((this.mUITxtPasswordWindow == null))
                {
                    this.mUITxtPasswordWindow = new UITxtPasswordWindow1(this);
                }
                return this.mUITxtPasswordWindow;
            }
        }
        
        public UIĐăngnhậpWindow11 UIĐăngnhậpWindow11
        {
            get
            {
                if ((this.mUIĐăngnhậpWindow11 == null))
                {
                    this.mUIĐăngnhậpWindow11 = new UIĐăngnhậpWindow11(this);
                }
                return this.mUIĐăngnhậpWindow11;
            }
        }
        #endregion
        
        #region Fields
        private UITxtUsernameWindow1 mUITxtUsernameWindow;
        
        private UITxtPasswordWindow1 mUITxtPasswordWindow;
        
        private UIĐăngnhậpWindow11 mUIĐăngnhậpWindow11;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UITxtUsernameWindow1 : WinWindow
    {
        
        public UITxtUsernameWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtUsername";
            this.WindowTitles.Add("Đăng nhập");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtUsernameEdit
        {
            get
            {
                if ((this.mUITxtUsernameEdit == null))
                {
                    this.mUITxtUsernameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtUsernameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Tên đăng nhập:";
                    this.mUITxtUsernameEdit.WindowTitles.Add("Đăng nhập");
                    #endregion
                }
                return this.mUITxtUsernameEdit;
            }
        }
        
        public WinEdit UITxtUsernameEdit1
        {
            get
            {
                if ((this.mUITxtUsernameEdit1 == null))
                {
                    this.mUITxtUsernameEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtUsernameEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Tên đăng nhập:";
                    this.mUITxtUsernameEdit1.WindowTitles.Add("Đăng nhập");
                    #endregion
                }
                return this.mUITxtUsernameEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtUsernameEdit;
        
        private WinEdit mUITxtUsernameEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UITxtPasswordWindow1 : WinWindow
    {
        
        public UITxtPasswordWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPassword";
            this.WindowTitles.Add("Đăng nhập");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtPasswordEdit
        {
            get
            {
                if ((this.mUITxtPasswordEdit == null))
                {
                    this.mUITxtPasswordEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtPasswordEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Mật khẩu:";
                    this.mUITxtPasswordEdit.WindowTitles.Add("Đăng nhập");
                    #endregion
                }
                return this.mUITxtPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIĐăngnhậpWindow11 : WinWindow
    {
        
        public UIĐăngnhậpWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnDangNhap";
            this.WindowTitles.Add("Đăng nhập");
            #endregion
        }
        
        #region Properties
        public WinButton UIĐăngnhậpButton
        {
            get
            {
                if ((this.mUIĐăngnhậpButton == null))
                {
                    this.mUIĐăngnhậpButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIĐăngnhậpButton.SearchProperties[WinButton.PropertyNames.Name] = "Đăng nhập";
                    this.mUIĐăngnhậpButton.WindowTitles.Add("Đăng nhập");
                    #endregion
                }
                return this.mUIĐăngnhậpButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIĐăngnhậpButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UINhậnphòngWindow1 : WinWindow
    {
        
        public UINhậnphòngWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Nhận phòng";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Nhận phòng");
            #endregion
        }
        
        #region Properties
        public UITabNavigationPage1ScrollableControl1 UITabNavigationPage1ScrollableControl
        {
            get
            {
                if ((this.mUITabNavigationPage1ScrollableControl == null))
                {
                    this.mUITabNavigationPage1ScrollableControl = new UITabNavigationPage1ScrollableControl1(this);
                }
                return this.mUITabNavigationPage1ScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UITabNavigationPage1ScrollableControl1 mUITabNavigationPage1ScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UITabNavigationPage1ScrollableControl1 : DXScrollableControl
    {
        
        public UITabNavigationPage1ScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabNavigationPage1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabNavigationPage";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Nhận phòng");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIKháchhàngWindow UIKháchhàngWindow
        {
            get
            {
                if ((this.mUIKháchhàngWindow == null))
                {
                    this.mUIKháchhàngWindow = new UIKháchhàngWindow(this);
                }
                return this.mUIKháchhàngWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        
        private UIKháchhàngWindow mUIKháchhàngWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Nhận phòng");
            #endregion
        }
        
        #region Properties
        public WinClient UITableLayoutPanel4Client
        {
            get
            {
                if ((this.mUITableLayoutPanel4Client == null))
                {
                    this.mUITableLayoutPanel4Client = new WinClient(this);
                    #region Search Criteria
                    this.mUITableLayoutPanel4Client.WindowTitles.Add("Nhận phòng");
                    #endregion
                }
                return this.mUITableLayoutPanel4Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUITableLayoutPanel4Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIKháchhàngWindow : WinWindow
    {
        
        public UIKháchhàngWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lblKhachHang";
            this.WindowTitles.Add("Nhận phòng");
            #endregion
        }
        
        #region Properties
        public WinText UIKháchhàngText
        {
            get
            {
                if ((this.mUIKháchhàngText == null))
                {
                    this.mUIKháchhàngText = new WinText(this);
                    #region Search Criteria
                    this.mUIKháchhàngText.SearchProperties[WinText.PropertyNames.Name] = "Khách hàng *";
                    this.mUIKháchhàngText.WindowTitles.Add("Nhận phòng");
                    #endregion
                }
                return this.mUIKháchhàngText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIKháchhàngText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIĐặtphòngWindow : DXWindow
    {
        
        public UIĐặtphòngWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Đặt phòng";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Đặt phòng");
            #endregion
        }
        
        #region Properties
        public UITabNavigationPage1ScrollableControl2 UITabNavigationPage1ScrollableControl
        {
            get
            {
                if ((this.mUITabNavigationPage1ScrollableControl == null))
                {
                    this.mUITabNavigationPage1ScrollableControl = new UITabNavigationPage1ScrollableControl2(this);
                }
                return this.mUITabNavigationPage1ScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UITabNavigationPage1ScrollableControl2 mUITabNavigationPage1ScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UITabNavigationPage1ScrollableControl2 : DXScrollableControl
    {
        
        public UITabNavigationPage1ScrollableControl2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabNavigationPage1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabNavigationPage";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Đặt phòng");
            #endregion
        }
        
        #region Properties
        public DXButton UILưuButton
        {
            get
            {
                if ((this.mUILưuButton == null))
                {
                    this.mUILưuButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILưuButton.SearchProperties[DXTestControl.PropertyNames.Name] = "simpleButton3";
                    this.mUILưuButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILưuButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
                    this.mUILưuButton.WindowTitles.Add("Đặt phòng");
                    #endregion
                }
                return this.mUILưuButton;
            }
        }
        
        public DXDateTimePicker UIDateFromDateTimeEdit
        {
            get
            {
                if ((this.mUIDateFromDateTimeEdit == null))
                {
                    this.mUIDateFromDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIDateFromDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "dateFrom";
                    this.mUIDateFromDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DateEdit";
                    this.mUIDateFromDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
                    #endregion
                }
                return this.mUIDateFromDateTimeEdit;
            }
        }
        
        public DXDateTimePicker UIDateToDateTimeEdit
        {
            get
            {
                if ((this.mUIDateToDateTimeEdit == null))
                {
                    this.mUIDateToDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIDateToDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "dateTo";
                    this.mUIDateToDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DateEdit";
                    this.mUIDateToDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
                    #endregion
                }
                return this.mUIDateToDateTimeEdit;
            }
        }
        
        public DXButton UIBtnThemPhongButton
        {
            get
            {
                if ((this.mUIBtnThemPhongButton == null))
                {
                    this.mUIBtnThemPhongButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBtnThemPhongButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnThemPhong";
                    this.mUIBtnThemPhongButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIBtnThemPhongButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
                    this.mUIBtnThemPhongButton.WindowTitles.Add("Đặt phòng");
                    #endregion
                }
                return this.mUIBtnThemPhongButton;
            }
        }
        
        public DXTestControl UILblTamTinhLabel
        {
            get
            {
                if ((this.mUILblTamTinhLabel == null))
                {
                    this.mUILblTamTinhLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblTamTinhLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblTamTinh";
                    this.mUILblTamTinhLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblTamTinhLabel.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    this.mUILblTamTinhLabel.WindowTitles.Add("Đặt phòng");
                    #endregion
                }
                return this.mUILblTamTinhLabel;
            }
        }
        
        public DXTextEdit UINumerTraTruocEdit
        {
            get
            {
                if ((this.mUINumerTraTruocEdit == null))
                {
                    this.mUINumerTraTruocEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUINumerTraTruocEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "numerTraTruoc";
                    this.mUINumerTraTruocEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpinEdit";
                    this.mUINumerTraTruocEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
                    this.mUINumerTraTruocEdit.WindowTitles.Add("Đặt phòng");
                    #endregion
                }
                return this.mUINumerTraTruocEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILưuButton;
        
        private DXDateTimePicker mUIDateFromDateTimeEdit;
        
        private DXDateTimePicker mUIDateToDateTimeEdit;
        
        private DXButton mUIBtnThemPhongButton;
        
        private DXTestControl mUILblTamTinhLabel;
        
        private DXTextEdit mUINumerTraTruocEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UILỗiWindow : WinWindow
    {
        
        public UILỗiWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Lỗi";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Lỗi");
            #endregion
        }
        
        #region Properties
        public UIKháchhàngkhônghợplệWindow UIKháchhàngkhônghợplệWindow
        {
            get
            {
                if ((this.mUIKháchhàngkhônghợplệWindow == null))
                {
                    this.mUIKháchhàngkhônghợplệWindow = new UIKháchhàngkhônghợplệWindow(this);
                }
                return this.mUIKháchhàngkhônghợplệWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIKháchhàngkhônghợplệWindow mUIKháchhàngkhônghợplệWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIKháchhàngkhônghợplệWindow : WinWindow
    {
        
        public UIKháchhàngkhônghợplệWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65535";
            this.WindowTitles.Add("Lỗi");
            #endregion
        }
        
        #region Properties
        public WinText UIKháchhàngkhônghợplệText
        {
            get
            {
                if ((this.mUIKháchhàngkhônghợplệText == null))
                {
                    this.mUIKháchhàngkhônghợplệText = new WinText(this);
                    #region Search Criteria
                    this.mUIKháchhàngkhônghợplệText.SearchProperties[WinText.PropertyNames.Name] = "Khách hàng không hợp lệ.";
                    this.mUIKháchhàngkhônghợplệText.WindowTitles.Add("Lỗi");
                    #endregion
                }
                return this.mUIKháchhàngkhônghợplệText;
            }
        }
        
        public WinText UIThờigiancheckinkhôngText
        {
            get
            {
                if ((this.mUIThờigiancheckinkhôngText == null))
                {
                    this.mUIThờigiancheckinkhôngText = new WinText(this);
                    #region Search Criteria
                    this.mUIThờigiancheckinkhôngText.SearchProperties[WinText.PropertyNames.Name] = "Thời gian check-in không hợp lệ.";
                    this.mUIThờigiancheckinkhôngText.WindowTitles.Add("Lỗi");
                    #endregion
                }
                return this.mUIThờigiancheckinkhôngText;
            }
        }
        
        public WinText UIThờigiancheckoutkhônText
        {
            get
            {
                if ((this.mUIThờigiancheckoutkhônText == null))
                {
                    this.mUIThờigiancheckoutkhônText = new WinText(this);
                    #region Search Criteria
                    this.mUIThờigiancheckoutkhônText.SearchProperties[WinText.PropertyNames.Name] = "Thời gian check-out không hợp lệ.";
                    this.mUIThờigiancheckoutkhônText.WindowTitles.Add("Lỗi");
                    #endregion
                }
                return this.mUIThờigiancheckoutkhônText;
            }
        }
        
        public WinText UISốtiềnkhônghợplệText
        {
            get
            {
                if ((this.mUISốtiềnkhônghợplệText == null))
                {
                    this.mUISốtiềnkhônghợplệText = new WinText(this);
                    #region Search Criteria
                    this.mUISốtiềnkhônghợplệText.SearchProperties[WinText.PropertyNames.Name] = "Số tiền không hợp lệ.";
                    this.mUISốtiềnkhônghợplệText.WindowTitles.Add("Lỗi");
                    #endregion
                }
                return this.mUISốtiềnkhônghợplệText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIKháchhàngkhônghợplệText;
        
        private WinText mUIThờigiancheckinkhôngText;
        
        private WinText mUIThờigiancheckoutkhônText;
        
        private WinText mUISốtiềnkhônghợplệText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Lỗi");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Lỗi");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIChọnthêmphòngWindow : WinWindow
    {
        
        public UIChọnthêmphòngWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Chọn thêm phòng";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Chọn thêm phòng");
            #endregion
        }
        
        #region Properties
        public DXButton UIItem201PhòngVIPSốngưButton
        {
            get
            {
                if ((this.mUIItem201PhòngVIPSốngưButton == null))
                {
                    this.mUIItem201PhòngVIPSốngưButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIItem201PhòngVIPSốngưButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPhong";
                    this.mUIItem201PhòngVIPSốngưButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIItem201PhòngVIPSốngưButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "7";
                    this.mUIItem201PhòngVIPSốngưButton.WindowTitles.Add("Chọn thêm phòng");
                    #endregion
                }
                return this.mUIItem201PhòngVIPSốngưButton;
            }
        }
        
        public DXButton UILưuButton
        {
            get
            {
                if ((this.mUILưuButton == null))
                {
                    this.mUILưuButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILưuButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSave";
                    this.mUILưuButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILưuButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    this.mUILưuButton.WindowTitles.Add("Chọn thêm phòng");
                    #endregion
                }
                return this.mUILưuButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIItem201PhòngVIPSốngưButton;
        
        private DXButton mUILưuButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIĐặtphòngWindow1 : WinWindow
    {
        
        public UIĐặtphòngWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Đặt phòng";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Đặt phòng");
            #endregion
        }
        
        #region Properties
        public UITabPane1TabList UITabPane1TabList
        {
            get
            {
                if ((this.mUITabPane1TabList == null))
                {
                    this.mUITabPane1TabList = new UITabPane1TabList(this);
                }
                return this.mUITabPane1TabList;
            }
        }
        
        public UITabNavigationPage2ScrollableControl UITabNavigationPage2ScrollableControl
        {
            get
            {
                if ((this.mUITabNavigationPage2ScrollableControl == null))
                {
                    this.mUITabNavigationPage2ScrollableControl = new UITabNavigationPage2ScrollableControl(this);
                }
                return this.mUITabNavigationPage2ScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UITabPane1TabList mUITabPane1TabList;
        
        private UITabNavigationPage2ScrollableControl mUITabNavigationPage2ScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UITabPane1TabList : WinTabList
    {
        
        public UITabPane1TabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTabList.PropertyNames.Name] = "tabPane1";
            this.WindowTitles.Add("Đặt phòng");
            #endregion
        }
        
        #region Properties
        public WinTabPage UISảnphẩmdịchvụTabPage
        {
            get
            {
                if ((this.mUISảnphẩmdịchvụTabPage == null))
                {
                    this.mUISảnphẩmdịchvụTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUISảnphẩmdịchvụTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Sản phẩm & dịch vụ";
                    this.mUISảnphẩmdịchvụTabPage.WindowTitles.Add("Đặt phòng");
                    #endregion
                }
                return this.mUISảnphẩmdịchvụTabPage;
            }
        }
        
        public WinTabPage UIThôngtinTabPage
        {
            get
            {
                if ((this.mUIThôngtinTabPage == null))
                {
                    this.mUIThôngtinTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIThôngtinTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Thông tin";
                    this.mUIThôngtinTabPage.WindowTitles.Add("Đặt phòng");
                    #endregion
                }
                return this.mUIThôngtinTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUISảnphẩmdịchvụTabPage;
        
        private WinTabPage mUIThôngtinTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UITabNavigationPage2ScrollableControl : DXScrollableControl
    {
        
        public UITabNavigationPage2ScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabNavigationPage2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabNavigationPage";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Đặt phòng");
            #endregion
        }
        
        #region Properties
        public UIPanelSanPhamWindow UIPanelSanPhamWindow
        {
            get
            {
                if ((this.mUIPanelSanPhamWindow == null))
                {
                    this.mUIPanelSanPhamWindow = new UIPanelSanPhamWindow(this);
                }
                return this.mUIPanelSanPhamWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelSanPhamWindow mUIPanelSanPhamWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIPanelSanPhamWindow : WinWindow
    {
        
        public UIPanelSanPhamWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "panelSanPham";
            this.WindowTitles.Add("Đặt phòng");
            #endregion
        }
        
        #region Properties
        public WinButton UIBánhmìngọt15000Button
        {
            get
            {
                if ((this.mUIBánhmìngọt15000Button == null))
                {
                    this.mUIBánhmìngọt15000Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIBánhmìngọt15000Button.SearchProperties[WinButton.PropertyNames.Name] = "Bánh mì ngọt15.000";
                    this.mUIBánhmìngọt15000Button.WindowTitles.Add("Đặt phòng");
                    #endregion
                }
                return this.mUIBánhmìngọt15000Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIBánhmìngọt15000Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIĐăngnhậpWindow2 : DXWindow
    {
        
        public UIĐăngnhậpWindow2()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Đăng nhập";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Đăng nhập");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtUsernameEdit
        {
            get
            {
                if ((this.mUITxtUsernameEdit == null))
                {
                    this.mUITxtUsernameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtUsernameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtUsername";
                    this.mUITxtUsernameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITxtUsernameEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUITxtUsernameEdit.WindowTitles.Add("Đăng nhập");
                    #endregion
                }
                return this.mUITxtUsernameEdit;
            }
        }
        
        public DXTextEdit UITxtPasswordEdit
        {
            get
            {
                if ((this.mUITxtPasswordEdit == null))
                {
                    this.mUITxtPasswordEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtPasswordEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtPassword";
                    this.mUITxtPasswordEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITxtPasswordEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUITxtPasswordEdit.WindowTitles.Add("Đăng nhập");
                    #endregion
                }
                return this.mUITxtPasswordEdit;
            }
        }
        
        public DXButton UIĐăngnhậpButton
        {
            get
            {
                if ((this.mUIĐăngnhậpButton == null))
                {
                    this.mUIĐăngnhậpButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIĐăngnhậpButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDangNhap";
                    this.mUIĐăngnhậpButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIĐăngnhậpButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIĐăngnhậpButton.WindowTitles.Add("Đăng nhập");
                    #endregion
                }
                return this.mUIĐăngnhậpButton;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtUsernameEdit;
        
        private DXTextEdit mUITxtPasswordEdit;
        
        private DXButton mUIĐăngnhậpButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIChọnthêmphòngWindow1 : DXWindow
    {
        
        public UIChọnthêmphòngWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Chọn thêm phòng";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Chọn thêm phòng");
            #endregion
        }
        
        #region Properties
        public DXButton UIItem101PhòngThườngSốButton
        {
            get
            {
                if ((this.mUIItem101PhòngThườngSốButton == null))
                {
                    this.mUIItem101PhòngThườngSốButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIItem101PhòngThườngSốButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPhong[0]";
                    this.mUIItem101PhòngThườngSốButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIItem101PhòngThườngSốButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "7";
                    this.mUIItem101PhòngThườngSốButton.WindowTitles.Add("Chọn thêm phòng");
                    #endregion
                }
                return this.mUIItem101PhòngThườngSốButton;
            }
        }
        
        public DXButton UILưuButton
        {
            get
            {
                if ((this.mUILưuButton == null))
                {
                    this.mUILưuButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILưuButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSave";
                    this.mUILưuButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILưuButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    this.mUILưuButton.WindowTitles.Add("Chọn thêm phòng");
                    #endregion
                }
                return this.mUILưuButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIItem101PhòngThườngSốButton;
        
        private DXButton mUILưuButton;
        #endregion
    }
}
